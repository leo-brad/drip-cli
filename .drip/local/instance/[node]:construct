"use strict";const{exec}=child_process;function buildStatic(a,b,c,d){let e;switch(a){case"drip-cli":e=".";break;default:e=path.join("..",a);}const f=process.cwd(),g=path.join("/","tmp",a+"-static");console.log("[Build] "+g),d.push("cd "+e),b.forEach(a=>{const b=fs.readFileSync(path.join(e,"package.json")).toString(),c=JSON.parse(b).scripts[a];d.push("npx "+c)}),d.push("rm -rf "+g),d.push("mkdir "+g),process.chdir(f),c.forEach(a=>{d.push("cp -a -R "+path.join(e,a)+" "+g)}),d.push("cd "+g),d.push("rm -rf .git"),d.push("git init"),d.push("git add --all"),d.push("git gc --force"),d.push("git commit -m \"[Update]\""),d.push("cd "+f)}async function constructDrip(){const a=[];buildStatic("drip-cli",["build"],["bin","dist","asset","node_modules"],a),buildStatic("drip-local",["build","pro"],["dist","node_modules"],a),buildStatic("drip-package-node",["build","pro"],["dist"],a),buildStatic("drip-server",["build"],["dist","node_modules"],a),buildStatic("drip-client",["build","pro"],["dist","node_modules"],a),a.push("node ./dist/bin/install.js"),a.push("rm -rf /tmp/example"),a.push("mkdir /tmp/example"),await execScript(a.join("&&"))}async function execScript(a){exec(a,{maxBuffer:10485760},(b,c,d)=>{if(b)throw b;else c?console.log(c):console.error(d);console.log(a)})}async function main(){await constructDrip(),console.log("finish...")}main();
